import React from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import BobaCanvas from "../components/BobaCanvas";
import FontFaceObserver from "fontfaceobserver";

export default function Home() {
  const [text, setText] = React.useState("send ukes");
  const [uri, setUri] = React.useState("#");
  const [fontSize, setFontSize] = React.useState(40);
  const [fontLoaded, setFontLoaded] = React.useState(false);

  React.useEffect(() => {
    const font = new FontFaceObserver("Comic Neue");
    font
      .load(null, 5000)
      .then(() => {
        console.log("font loaded");
        setFontLoaded(true);
      })
      .catch((e) => {
        console.log(e);
        setFontLoaded(true);
      });
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>BobaExploitable</title>
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=Comic+Neue:ital,wght@1,700"
          rel="stylesheet"
        />
      </Head>

      <main className={styles.main}>
        <div>
          {typeof window !== "undefined" && fontLoaded && (
            <BobaCanvas
              text={text}
              fontSize={fontSize}
              onImageChange={(uri) => setUri(uri)}
            />
          )}
        </div>
        <div className={styles["input-container"]}>
          <div className={styles.input}>
            <label>Text:</label>
            <textarea value={text} onChange={(e) => setText(e.target.value)} />
            <label>Font Size:</label>
            <input
              type="range"
              min="1"
              max="200"
              value={fontSize * 2}
              onChange={(e) => setFontSize(parseInt(e.target.value) * 0.5)}
            />
          </div>
          <a href={uri} download={`${text.replaceAll(" ", "_")}.png`}>
            download image
          </a>
        </div>
      </main>
    </div>
  );
}
